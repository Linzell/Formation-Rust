{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1","program":"/home/linzell/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","memmap2","--edition=2018","/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=badf1566c0d1e6cb","-C","extra-filename=-badf1566c0d1e6cb","--out-dir","/media/linzell/Disque local/プロジェクト/Formation-Rust/grep/target/rls/debug/deps","-L","dependency=/media/linzell/Disque local/プロジェクト/Formation-Rust/grep/target/rls/debug/deps","--extern","libc=/media/linzell/Disque local/プロジェクト/Formation-Rust/grep/target/rls/debug/deps/liblibc-50c0e1dd101f5271.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/linzell/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/media/linzell/Disque local/プロジェクト/Formation-Rust/grep/target/rls/debug/deps/libmemmap2-badf1566c0d1e6cb.rmeta"},"prelude":{"crate_id":{"name":"memmap2","disambiguator":[14495484475726330172,0]},"crate_root":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src","external_crates":[{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","num":20,"id":{"name":"libc","disambiguator":[16078242550846372511,0]}}],"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":0,"byte_end":43041,"line_start":1,"line_end":1378,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":0,"byte_end":43041,"line_start":1,"line_end":1378,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":90},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163}],"decl_id":null,"docs":" A cross-platform Rust API for memory mapped buffers.\n","sig":null,"attributes":[{"value":"/ A cross-platform Rust API for memory mapped buffers.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":776,"byte_end":793,"line_start":39,"line_end":39,"column_start":12,"column_end":29},"name":"MmapRawDescriptor","qualname":"::MmapRawDescriptor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":752,"byte_end":764,"line_start":38,"line_end":38,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":909,"byte_end":922,"line_start":44,"line_end":44,"column_start":11,"column_end":24},"name":"MmapAsRawDesc","qualname":"::MmapAsRawDesc","value":"MmapAsRawDesc","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":932,"byte_end":943,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"as_raw_desc","qualname":"::MmapAsRawDesc::as_raw_desc","value":"pub fn as_raw_desc(&Self) -> MmapRawDescriptor","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2679,"byte_end":2690,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"MmapOptions","qualname":"::MmapOptions","value":"MmapOptions {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" A memory map builder, providing advanced options and flags for specifying memory map behavior.","sig":null,"attributes":[{"value":"/ A memory map builder, providing advanced options and flags for specifying memory map behavior.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1566,"byte_end":1664,"line_start":76,"line_end":76,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1665,"byte_end":1668,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `MmapOptions` can be used to create an anonymous memory map using [`map_anon()`], or a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1669,"byte_end":1759,"line_start":78,"line_end":78,"column_start":1,"column_end":91}},{"value":"/ file-backed memory map using one of [`map()`], [`map_mut()`], [`map_exec()`],","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1760,"byte_end":1841,"line_start":79,"line_end":79,"column_start":1,"column_end":82}},{"value":"/ [`map_copy()`], or [`map_copy_read_only()`].","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1842,"byte_end":1890,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1891,"byte_end":1894,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1895,"byte_end":1908,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1909,"byte_end":1912,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ All file-backed memory map constructors are marked `unsafe` because of the potential for","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1913,"byte_end":2005,"line_start":84,"line_end":84,"column_start":1,"column_end":93}},{"value":"/ *Undefined Behavior* (UB) using the map if the underlying file is subsequently modified, in or","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2006,"byte_end":2104,"line_start":85,"line_end":85,"column_start":1,"column_end":99}},{"value":"/ out of process. Applications must consider the risk and take appropriate precautions when","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2105,"byte_end":2198,"line_start":86,"line_end":86,"column_start":1,"column_end":94}},{"value":"/ using file-backed maps. Solutions such as file permissions, locks or process-private (e.g.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2199,"byte_end":2293,"line_start":87,"line_end":87,"column_start":1,"column_end":95}},{"value":"/ unlinked) files exist but are platform specific and limited.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2294,"byte_end":2358,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2359,"byte_end":2362,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`map_anon()`]: MmapOptions::map_anon()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2363,"byte_end":2406,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ [`map()`]: MmapOptions::map()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2407,"byte_end":2440,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/ [`map_mut()`]: MmapOptions::map_mut()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2441,"byte_end":2482,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ [`map_exec()`]: MmapOptions::map_exec()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2483,"byte_end":2526,"line_start":93,"line_end":93,"column_start":1,"column_end":44}},{"value":"/ [`map_copy()`]: MmapOptions::map_copy()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2527,"byte_end":2570,"line_start":94,"line_end":94,"column_start":1,"column_end":44}},{"value":"/ [`map_copy_read_only()`]: MmapOptions::map_copy_read_only()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2571,"byte_end":2634,"line_start":95,"line_end":95,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3618,"byte_end":3621,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"new","qualname":"<MmapOptions>::new","value":"pub fn new() -> MmapOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options for configuring and creating a memory map.","sig":null,"attributes":[{"value":"/ Creates a new set of options for configuring and creating a memory map.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2797,"byte_end":2872,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2877,"byte_end":2880,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2885,"byte_end":2898,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2903,"byte_end":2906,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2911,"byte_end":2918,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use memmap2::{MmapMut, MmapOptions};","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2923,"byte_end":2963,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/ # use std::io::Result;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2968,"byte_end":2994,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2999,"byte_end":3002,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3007,"byte_end":3038,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/ // Create a new memory map builder.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3043,"byte_end":3082,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/ let mut mmap_options = MmapOptions::new();","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3087,"byte_end":3133,"line_start":115,"line_end":115,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3138,"byte_end":3141,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Configure the memory map builder using option setters, then create","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3146,"byte_end":3219,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ // a memory map using one of `mmap_options.map_anon`, `mmap_options.map`,","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3224,"byte_end":3301,"line_start":118,"line_end":118,"column_start":5,"column_end":82}},{"value":"/ // `mmap_options.map_mut`, `mmap_options.map_exec`, or `mmap_options.map_copy`:","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3306,"byte_end":3389,"line_start":119,"line_end":119,"column_start":5,"column_end":88}},{"value":"/ let mut mmap: MmapMut = mmap_options.len(36).map_anon()?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3394,"byte_end":3455,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3460,"byte_end":3463,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ // Use the memory map:","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3468,"byte_end":3494,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ mmap.copy_from_slice(b\"...data to copy to the memory map...\");","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3499,"byte_end":3565,"line_start":123,"line_end":123,"column_start":5,"column_end":71}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3570,"byte_end":3582,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3587,"byte_end":3594,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3599,"byte_end":3606,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4340,"byte_end":4346,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"offset","qualname":"<MmapOptions>::offset","value":"pub fn offset(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the memory map to start at byte `offset` from the beginning of the file.","sig":null,"attributes":[{"value":"/ Configures the memory map to start at byte `offset` from the beginning of the file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3683,"byte_end":3770,"line_start":131,"line_end":131,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3775,"byte_end":3778,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This option has no effect on anonymous memory maps.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3783,"byte_end":3838,"line_start":133,"line_end":133,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3843,"byte_end":3846,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ By default, the offset is 0.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3851,"byte_end":3883,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3888,"byte_end":3891,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3896,"byte_end":3909,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3914,"byte_end":3917,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3922,"byte_end":3929,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3934,"byte_end":3963,"line_start":140,"line_end":140,"column_start":5,"column_end":34}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3968,"byte_end":3990,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":3995,"byte_end":3998,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4003,"byte_end":4043,"line_start":143,"line_end":143,"column_start":5,"column_end":45}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4048,"byte_end":4071,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4076,"byte_end":4102,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/                 .offset(30)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4107,"byte_end":4138,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/                 .map(&File::open(\"LICENSE-APACHE\")?)?","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4143,"byte_end":4200,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/ };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4205,"byte_end":4211,"line_start":148,"line_end":148,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(&b\"Apache License\"[..],","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4216,"byte_end":4254,"line_start":149,"line_end":149,"column_start":5,"column_end":43}},{"value":"/            &mmap[..14]);","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4259,"byte_end":4287,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4292,"byte_end":4304,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4309,"byte_end":4316,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4321,"byte_end":4328,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":5090,"byte_end":5093,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"len","qualname":"<MmapOptions>::len","value":"pub fn len(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the created memory mapped buffer to be `len` bytes long.","sig":null,"attributes":[{"value":"/ Configures the created memory mapped buffer to be `len` bytes long.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4440,"byte_end":4511,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4516,"byte_end":4519,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This option is mandatory for anonymous memory maps.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4524,"byte_end":4579,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4584,"byte_end":4587,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ For file-backed memory maps, the length will default to the file length.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4592,"byte_end":4668,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4673,"byte_end":4676,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4681,"byte_end":4694,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4699,"byte_end":4702,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4707,"byte_end":4714,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4719,"byte_end":4748,"line_start":168,"line_end":168,"column_start":5,"column_end":34}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4753,"byte_end":4775,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4780,"byte_end":4783,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4788,"byte_end":4828,"line_start":171,"line_end":171,"column_start":5,"column_end":45}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4833,"byte_end":4856,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4861,"byte_end":4887,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/                 .len(9)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4892,"byte_end":4919,"line_start":174,"line_end":174,"column_start":5,"column_end":32}},{"value":"/                 .map(&File::open(\"README.md\")?)?","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4924,"byte_end":4976,"line_start":175,"line_end":175,"column_start":5,"column_end":57}},{"value":"/ };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4981,"byte_end":4987,"line_start":176,"line_end":176,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(&b\"# memmap2\"[..], &mmap[..]);","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":4992,"byte_end":5037,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":5042,"byte_end":5054,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":5059,"byte_end":5066,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":5071,"byte_end":5078,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6696,"byte_end":6701,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"stack","qualname":"<MmapOptions>::stack","value":"pub fn stack(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the anonymous memory map to be suitable for a process or thread stack.","sig":null,"attributes":[{"value":"/ Configures the anonymous memory map to be suitable for a process or thread stack.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6183,"byte_end":6268,"line_start":215,"line_end":215,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6273,"byte_end":6276,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This option corresponds to the `MAP_STACK` flag on Linux. It has no effect on Windows.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6281,"byte_end":6371,"line_start":217,"line_end":217,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6376,"byte_end":6379,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This option has no effect on file-backed memory maps.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6384,"byte_end":6441,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6446,"byte_end":6449,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6454,"byte_end":6467,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6472,"byte_end":6475,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6480,"byte_end":6487,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6492,"byte_end":6521,"line_start":224,"line_end":224,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6526,"byte_end":6529,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6534,"byte_end":6574,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/ let stack = MmapOptions::new().stack().len(4096).map_anon();","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6579,"byte_end":6643,"line_start":227,"line_end":227,"column_start":5,"column_end":69}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6648,"byte_end":6660,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6665,"byte_end":6672,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6677,"byte_end":6684,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7483,"byte_end":7491,"line_start":259,"line_end":259,"column_start":12,"column_end":20},"name":"populate","qualname":"<MmapOptions>::populate","value":"pub fn populate(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Populate (prefault) page tables for a mapping.","sig":null,"attributes":[{"value":"/ Populate (prefault) page tables for a mapping.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6779,"byte_end":6829,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6834,"byte_end":6837,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ For a file mapping, this causes read-ahead on the file. This will help to reduce blocking on page faults later.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6842,"byte_end":6957,"line_start":238,"line_end":238,"column_start":5,"column_end":120}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6962,"byte_end":6965,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This option corresponds to the `MAP_POPULATE` flag on Linux. It has no effect on Windows.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":6970,"byte_end":7063,"line_start":240,"line_end":240,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7068,"byte_end":7071,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7076,"byte_end":7089,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7094,"byte_end":7097,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7102,"byte_end":7109,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7114,"byte_end":7143,"line_start":245,"line_end":245,"column_start":5,"column_end":34}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7148,"byte_end":7170,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7175,"byte_end":7178,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7183,"byte_end":7223,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/ let file = File::open(\"LICENSE-MIT\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7228,"byte_end":7270,"line_start":249,"line_end":249,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7275,"byte_end":7278,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7283,"byte_end":7306,"line_start":251,"line_end":251,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new().populate().map(&file)?","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7311,"byte_end":7360,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7365,"byte_end":7371,"line_start":253,"line_end":253,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7376,"byte_end":7379,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b\"Copyright\"[..], &mmap[..9]);","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7384,"byte_end":7430,"line_start":255,"line_end":255,"column_start":5,"column_end":51}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7435,"byte_end":7447,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7452,"byte_end":7459,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7464,"byte_end":7471,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8375,"byte_end":8378,"line_start":292,"line_end":292,"column_start":19,"column_end":22},"name":"map","qualname":"<MmapOptions>::map","value":"pub unsafe fn map<T: MmapAsRawDesc>(&Self, T) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a read-only memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a read-only memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7572,"byte_end":7624,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7629,"byte_end":7632,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7637,"byte_end":7649,"line_start":266,"line_end":266,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7654,"byte_end":7657,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7662,"byte_end":7756,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7761,"byte_end":7841,"line_start":269,"line_end":269,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7846,"byte_end":7849,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7854,"byte_end":7867,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7872,"byte_end":7875,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7880,"byte_end":7887,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7892,"byte_end":7921,"line_start":274,"line_end":274,"column_start":5,"column_end":34}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7926,"byte_end":7948,"line_start":275,"line_end":275,"column_start":5,"column_end":27}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7953,"byte_end":7975,"line_start":276,"line_end":276,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7980,"byte_end":7983,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":7988,"byte_end":8028,"line_start":278,"line_end":278,"column_start":5,"column_end":45}},{"value":"/ let mut file = File::open(\"LICENSE-APACHE\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8033,"byte_end":8082,"line_start":279,"line_end":279,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8087,"byte_end":8090,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8095,"byte_end":8129,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/ file.read_to_end(&mut contents)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8134,"byte_end":8171,"line_start":282,"line_end":282,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8176,"byte_end":8179,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8184,"byte_end":8207,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new().map(&file)?","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8212,"byte_end":8250,"line_start":285,"line_end":285,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8255,"byte_end":8261,"line_start":286,"line_end":286,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8266,"byte_end":8269,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&contents[..], &mmap[..]);","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8274,"byte_end":8315,"line_start":288,"line_end":288,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8320,"byte_end":8332,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8337,"byte_end":8344,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8349,"byte_end":8356,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8906,"byte_end":8914,"line_start":305,"line_end":305,"column_start":19,"column_end":27},"name":"map_exec","qualname":"<MmapOptions>::map_exec","value":"pub unsafe fn map_exec<T: MmapAsRawDesc>(&Self, T) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a readable and executable memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a readable and executable memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8604,"byte_end":8670,"line_start":299,"line_end":299,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8675,"byte_end":8678,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8683,"byte_end":8695,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8700,"byte_end":8703,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8708,"byte_end":8802,"line_start":303,"line_end":303,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":8807,"byte_end":8887,"line_start":304,"line_end":304,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10190,"byte_end":10197,"line_start":345,"line_end":345,"column_start":19,"column_end":26},"name":"map_mut","qualname":"<MmapOptions>::map_mut","value":"pub unsafe fn map_mut<T: MmapAsRawDesc>(&Self, T) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a writeable memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a writeable memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9152,"byte_end":9204,"line_start":312,"line_end":312,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9209,"byte_end":9212,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9217,"byte_end":9229,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9234,"byte_end":9237,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9242,"byte_end":9336,"line_start":316,"line_end":316,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read and write permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9341,"byte_end":9431,"line_start":317,"line_end":317,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9436,"byte_end":9439,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9444,"byte_end":9457,"line_start":319,"line_end":319,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9462,"byte_end":9465,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9470,"byte_end":9477,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap2;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9482,"byte_end":9509,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9514,"byte_end":9541,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9546,"byte_end":9551,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/ use std::fs::OpenOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9556,"byte_end":9585,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9590,"byte_end":9617,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9622,"byte_end":9625,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9630,"byte_end":9659,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9664,"byte_end":9669,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9674,"byte_end":9714,"line_start":330,"line_end":330,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9719,"byte_end":9770,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let path: PathBuf = /* path to file */","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9775,"byte_end":9817,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/ #   tempdir.path().join(\"map_mut\");","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9822,"byte_end":9861,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ let file = OpenOptions::new().read(true).write(true).create(true).open(&path)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9866,"byte_end":9949,"line_start":334,"line_end":334,"column_start":5,"column_end":88}},{"value":"/ file.set_len(13)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9954,"byte_end":9976,"line_start":335,"line_end":335,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9981,"byte_end":9984,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut mmap = unsafe {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":9989,"byte_end":10016,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     MmapOptions::new().map_mut(&file)?","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10021,"byte_end":10063,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10068,"byte_end":10074,"line_start":339,"line_end":339,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10079,"byte_end":10082,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ mmap.copy_from_slice(b\"Hello, world!\");","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10087,"byte_end":10130,"line_start":341,"line_end":341,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10135,"byte_end":10147,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10152,"byte_end":10159,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10164,"byte_end":10171,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11291,"byte_end":11299,"line_start":376,"line_end":376,"column_start":19,"column_end":27},"name":"map_copy","qualname":"<MmapOptions>::map_copy","value":"pub unsafe fn map_copy<T: MmapAsRawDesc>(&Self, T) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a copy-on-write memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a copy-on-write memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10440,"byte_end":10496,"line_start":352,"line_end":352,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10501,"byte_end":10504,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Data written to the memory map will not be visible by other processes,","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10509,"byte_end":10583,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ and will not be carried through to the underlying file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10588,"byte_end":10647,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10652,"byte_end":10655,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10660,"byte_end":10672,"line_start":357,"line_end":357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10677,"byte_end":10680,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10685,"byte_end":10779,"line_start":359,"line_end":359,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with writable permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10784,"byte_end":10868,"line_start":360,"line_end":360,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10873,"byte_end":10876,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10881,"byte_end":10894,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10899,"byte_end":10902,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10907,"byte_end":10914,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10919,"byte_end":10948,"line_start":365,"line_end":365,"column_start":5,"column_end":34}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10953,"byte_end":10975,"line_start":366,"line_end":366,"column_start":5,"column_end":27}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":10980,"byte_end":11003,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11008,"byte_end":11011,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11016,"byte_end":11056,"line_start":369,"line_end":369,"column_start":5,"column_end":45}},{"value":"/ let file = File::open(\"LICENSE-APACHE\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11061,"byte_end":11106,"line_start":370,"line_end":370,"column_start":5,"column_end":50}},{"value":"/ let mut mmap = unsafe { MmapOptions::new().map_copy(&file)? };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11111,"byte_end":11177,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/ (&mut mmap[..]).write_all(b\"Hello, world!\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11182,"byte_end":11231,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11236,"byte_end":11248,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11253,"byte_end":11260,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11265,"byte_end":11272,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12370,"byte_end":12388,"line_start":411,"line_end":411,"column_start":19,"column_end":37},"name":"map_copy_read_only","qualname":"<MmapOptions>::map_copy_read_only","value":"pub unsafe fn map_copy_read_only<T: MmapAsRawDesc>(&Self, T) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a copy-on-write read-only memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a copy-on-write read-only memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11543,"byte_end":11609,"line_start":383,"line_end":383,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11614,"byte_end":11617,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11622,"byte_end":11634,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11639,"byte_end":11642,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11647,"byte_end":11741,"line_start":387,"line_end":387,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11746,"byte_end":11826,"line_start":388,"line_end":388,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11831,"byte_end":11834,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11839,"byte_end":11852,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11857,"byte_end":11860,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11865,"byte_end":11872,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11877,"byte_end":11906,"line_start":393,"line_end":393,"column_start":5,"column_end":34}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11911,"byte_end":11933,"line_start":394,"line_end":394,"column_start":5,"column_end":27}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11938,"byte_end":11960,"line_start":395,"line_end":395,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11965,"byte_end":11968,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":11973,"byte_end":12013,"line_start":397,"line_end":397,"column_start":5,"column_end":45}},{"value":"/ let mut file = File::open(\"README.md\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12018,"byte_end":12062,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12067,"byte_end":12070,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12075,"byte_end":12109,"line_start":400,"line_end":400,"column_start":5,"column_end":39}},{"value":"/ file.read_to_end(&mut contents)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12114,"byte_end":12151,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12156,"byte_end":12159,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12164,"byte_end":12187,"line_start":403,"line_end":403,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new().map_copy_read_only(&file)?","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12192,"byte_end":12245,"line_start":404,"line_end":404,"column_start":5,"column_end":58}},{"value":"/ };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12250,"byte_end":12256,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12261,"byte_end":12264,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&contents[..], &mmap[..]);","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12269,"byte_end":12310,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12315,"byte_end":12327,"line_start":408,"line_end":408,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12332,"byte_end":12339,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12344,"byte_end":12351,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12953,"byte_end":12961,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"map_anon","qualname":"<MmapOptions>::map_anon","value":"pub fn map_anon(&Self) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates an anonymous memory map.","sig":null,"attributes":[{"value":"/ Creates an anonymous memory map.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12636,"byte_end":12672,"line_start":418,"line_end":418,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12677,"byte_end":12680,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Note: the memory map length must be configured to be greater than 0 before creating an","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12685,"byte_end":12775,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ anonymous memory map using `MmapOptions::len()`.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12780,"byte_end":12832,"line_start":421,"line_end":421,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12837,"byte_end":12840,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12845,"byte_end":12857,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12862,"byte_end":12865,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":12870,"byte_end":12941,"line_start":425,"line_end":425,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13363,"byte_end":13370,"line_start":436,"line_end":436,"column_start":12,"column_end":19},"name":"map_raw","qualname":"<MmapOptions>::map_raw","value":"pub fn map_raw<T: MmapAsRawDesc>(&Self, T) -> Result<MmapRaw>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw memory map.","sig":null,"attributes":[{"value":"/ Creates a raw memory map.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13095,"byte_end":13124,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13129,"byte_end":13132,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13137,"byte_end":13149,"line_start":432,"line_end":432,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13154,"byte_end":13157,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13162,"byte_end":13256,"line_start":434,"line_end":434,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read and write permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13261,"byte_end":13351,"line_start":435,"line_end":435,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15530,"byte_end":15534,"line_start":487,"line_end":487,"column_start":12,"column_end":16},"name":"Mmap","qualname":"::Mmap","value":"Mmap {  }","parent":null,"children":[{"krate":0,"index":120}],"decl_id":null,"docs":" A handle to an immutable memory mapped buffer.","sig":null,"attributes":[{"value":"/ A handle to an immutable memory mapped buffer.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13611,"byte_end":13661,"line_start":444,"line_end":444,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13662,"byte_end":13665,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ A `Mmap` may be backed by a file, or it can be anonymous map, backed by volatile memory. Use","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13666,"byte_end":13762,"line_start":446,"line_end":446,"column_start":1,"column_end":97}},{"value":"/ [`MmapOptions`] or [`map()`] to create a file-backed memory map. To create an immutable","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13763,"byte_end":13854,"line_start":447,"line_end":447,"column_start":1,"column_end":92}},{"value":"/ anonymous memory map, first create a mutable anonymous memory map, and then make it immutable","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13855,"byte_end":13952,"line_start":448,"line_end":448,"column_start":1,"column_end":98}},{"value":"/ with [`MmapMut::make_read_only()`].","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13953,"byte_end":13992,"line_start":449,"line_end":449,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13993,"byte_end":13996,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ A file backed `Mmap` is created by `&File` reference, and will remain valid even after the","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":13997,"byte_end":14091,"line_start":451,"line_end":451,"column_start":1,"column_end":95}},{"value":"/ `File` is dropped. In other words, the `Mmap` handle is completely independent of the `File`","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14092,"byte_end":14188,"line_start":452,"line_end":452,"column_start":1,"column_end":97}},{"value":"/ used to create it. For consistency, on some platforms this is achieved by duplicating the","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14189,"byte_end":14282,"line_start":453,"line_end":453,"column_start":1,"column_end":94}},{"value":"/ underlying file handle. The memory will be unmapped when the `Mmap` handle is dropped.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14283,"byte_end":14373,"line_start":454,"line_end":454,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14374,"byte_end":14377,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ Dereferencing and accessing the bytes of the buffer may result in page faults (e.g. swapping","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14378,"byte_end":14474,"line_start":456,"line_end":456,"column_start":1,"column_end":97}},{"value":"/ the mapped pages into physical memory) though the details of this are platform specific.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14475,"byte_end":14567,"line_start":457,"line_end":457,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14568,"byte_end":14571,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ `Mmap` is [`Sync`](std::marker::Sync) and [`Send`](std::marker::Send).","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14572,"byte_end":14646,"line_start":459,"line_end":459,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14647,"byte_end":14650,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14651,"byte_end":14664,"line_start":461,"line_end":461,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14665,"byte_end":14668,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ All file-backed memory map constructors are marked `unsafe` because of the potential for","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14669,"byte_end":14761,"line_start":463,"line_end":463,"column_start":1,"column_end":93}},{"value":"/ *Undefined Behavior* (UB) using the map if the underlying file is subsequently modified, in or","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14762,"byte_end":14860,"line_start":464,"line_end":464,"column_start":1,"column_end":99}},{"value":"/ out of process. Applications must consider the risk and take appropriate precautions when using","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14861,"byte_end":14960,"line_start":465,"line_end":465,"column_start":1,"column_end":100}},{"value":"/ file-backed maps. Solutions such as file permissions, locks or process-private (e.g. unlinked)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":14961,"byte_end":15059,"line_start":466,"line_end":466,"column_start":1,"column_end":99}},{"value":"/ files exist but are platform specific and limited.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15060,"byte_end":15114,"line_start":467,"line_end":467,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15115,"byte_end":15118,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15119,"byte_end":15133,"line_start":469,"line_end":469,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15134,"byte_end":15137,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15138,"byte_end":15145,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ use memmap2::MmapOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15146,"byte_end":15175,"line_start":472,"line_end":472,"column_start":1,"column_end":30}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15176,"byte_end":15199,"line_start":473,"line_end":473,"column_start":1,"column_end":24}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15200,"byte_end":15222,"line_start":474,"line_end":474,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15223,"byte_end":15226,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15227,"byte_end":15267,"line_start":476,"line_end":476,"column_start":1,"column_end":41}},{"value":"/ let file = File::open(\"README.md\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15268,"byte_end":15308,"line_start":477,"line_end":477,"column_start":1,"column_end":41}},{"value":"/ let mmap = unsafe { MmapOptions::new().map(&file)? };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15309,"byte_end":15366,"line_start":478,"line_end":478,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(b\"# memmap2\", &mmap[0..9]);","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15367,"byte_end":15409,"line_start":479,"line_end":479,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15410,"byte_end":15422,"line_start":480,"line_end":480,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15423,"byte_end":15430,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15431,"byte_end":15438,"line_start":482,"line_end":482,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15439,"byte_end":15442,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ See [`MmapMut`] for the mutable version.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15443,"byte_end":15487,"line_start":484,"line_end":484,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15488,"byte_end":15491,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ [`map()`]: Mmap::map()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15492,"byte_end":15518,"line_start":486,"line_end":486,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16428,"byte_end":16431,"line_start":521,"line_end":521,"column_start":19,"column_end":22},"name":"map","qualname":"<Mmap>::map","value":"pub unsafe fn map<T: MmapAsRawDesc>(T) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a read-only memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a read-only memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15578,"byte_end":15630,"line_start":492,"line_end":492,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15635,"byte_end":15638,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `MmapOptions::new().map(file)`.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15643,"byte_end":15708,"line_start":494,"line_end":494,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15713,"byte_end":15716,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15721,"byte_end":15733,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15738,"byte_end":15741,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15746,"byte_end":15840,"line_start":498,"line_end":498,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15845,"byte_end":15925,"line_start":499,"line_end":499,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15930,"byte_end":15933,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15938,"byte_end":15951,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15956,"byte_end":15959,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15964,"byte_end":15971,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15976,"byte_end":15998,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16003,"byte_end":16025,"line_start":505,"line_end":505,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16030,"byte_end":16033,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ use memmap2::Mmap;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16038,"byte_end":16060,"line_start":507,"line_end":507,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16065,"byte_end":16068,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16073,"byte_end":16113,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let mut file = File::open(\"LICENSE-APACHE\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16118,"byte_end":16167,"line_start":510,"line_end":510,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16172,"byte_end":16175,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16180,"byte_end":16214,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ file.read_to_end(&mut contents)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16219,"byte_end":16256,"line_start":513,"line_end":513,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16261,"byte_end":16264,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let mmap = unsafe { Mmap::map(&file)?  };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16269,"byte_end":16314,"line_start":515,"line_end":515,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16319,"byte_end":16322,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&contents[..], &mmap[..]);","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16327,"byte_end":16368,"line_start":517,"line_end":517,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16373,"byte_end":16385,"line_start":518,"line_end":518,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16390,"byte_end":16397,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16402,"byte_end":16409,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17866,"byte_end":17874,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"make_mut","qualname":"<Mmap>::make_mut","value":"pub fn make_mut(Self) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Transition the memory map to be writable.","sig":null,"attributes":[{"value":"/ Transition the memory map to be writable.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16525,"byte_end":16570,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16575,"byte_end":16578,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ If the memory map is file-backed, the file must have been opened with write permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16583,"byte_end":16675,"line_start":527,"line_end":527,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16680,"byte_end":16683,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16688,"byte_end":16700,"line_start":529,"line_end":529,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16705,"byte_end":16708,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16713,"byte_end":16807,"line_start":531,"line_end":531,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with writable permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16812,"byte_end":16896,"line_start":532,"line_end":532,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16901,"byte_end":16904,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16909,"byte_end":16922,"line_start":534,"line_end":534,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16927,"byte_end":16930,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16935,"byte_end":16942,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap2;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16947,"byte_end":16974,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":16979,"byte_end":17006,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17011,"byte_end":17016,"line_start":539,"line_end":539,"column_start":5,"column_end":10}},{"value":"/ use memmap2::Mmap;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17021,"byte_end":17043,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/ use std::ops::DerefMut;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17048,"byte_end":17075,"line_start":541,"line_end":541,"column_start":5,"column_end":32}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17080,"byte_end":17103,"line_start":542,"line_end":542,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::OpenOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17108,"byte_end":17139,"line_start":543,"line_end":543,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17144,"byte_end":17147,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17152,"byte_end":17192,"line_start":545,"line_end":545,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17197,"byte_end":17248,"line_start":546,"line_end":546,"column_start":5,"column_end":56}},{"value":"/ let file = /* file opened with write permissions */","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17253,"byte_end":17308,"line_start":547,"line_end":547,"column_start":5,"column_end":60}},{"value":"/ #          OpenOptions::new()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17313,"byte_end":17346,"line_start":548,"line_end":548,"column_start":5,"column_end":38}},{"value":"/ #                      .read(true)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17351,"byte_end":17389,"line_start":549,"line_end":549,"column_start":5,"column_end":43}},{"value":"/ #                      .write(true)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17394,"byte_end":17433,"line_start":550,"line_end":550,"column_start":5,"column_end":44}},{"value":"/ #                      .create(true)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17438,"byte_end":17478,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/ #                      .open(tempdir.path()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17483,"byte_end":17530,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/ #                      .join(\"make_mut\"))?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17535,"byte_end":17582,"line_start":553,"line_end":553,"column_start":5,"column_end":52}},{"value":"/ # file.set_len(128)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17587,"byte_end":17612,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/ let mmap = unsafe { Mmap::map(&file)? };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17617,"byte_end":17661,"line_start":555,"line_end":555,"column_start":5,"column_end":49}},{"value":"/ // ... use the read-only memory map ...","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17666,"byte_end":17709,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/ let mut mut_mmap = mmap.make_mut()?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17714,"byte_end":17754,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/ mut_mmap.deref_mut().write_all(b\"hello, world!\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17759,"byte_end":17813,"line_start":558,"line_end":558,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17818,"byte_end":17830,"line_start":559,"line_end":559,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17835,"byte_end":17842,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":17847,"byte_end":17854,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18728,"byte_end":18735,"line_start":597,"line_end":597,"column_start":12,"column_end":19},"name":"MmapRaw","qualname":"::MmapRaw","value":"MmapRaw {  }","parent":null,"children":[{"krate":0,"index":133}],"decl_id":null,"docs":" A handle to a raw memory mapped buffer.","sig":null,"attributes":[{"value":"/ A handle to a raw memory mapped buffer.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18504,"byte_end":18547,"line_start":593,"line_end":593,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18548,"byte_end":18551,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ This struct never hands out references to its interior, only raw pointers.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18552,"byte_end":18630,"line_start":595,"line_end":595,"column_start":1,"column_end":79}},{"value":"/ This can be helpful when creating shared memory maps between untrusted processes.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18631,"byte_end":18716,"line_start":596,"line_end":596,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19155,"byte_end":19162,"line_start":610,"line_end":610,"column_start":12,"column_end":19},"name":"map_raw","qualname":"<MmapRaw>::map_raw","value":"pub fn map_raw<T: MmapAsRawDesc>(T) -> Result<MmapRaw>","parent":null,"children":[],"decl_id":null,"docs":" Creates a writeable memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a writeable memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18782,"byte_end":18834,"line_start":602,"line_end":602,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18839,"byte_end":18842,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `MmapOptions::new().map_raw(file)`.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18847,"byte_end":18916,"line_start":604,"line_end":604,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18921,"byte_end":18924,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18929,"byte_end":18941,"line_start":606,"line_end":606,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18946,"byte_end":18949,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18954,"byte_end":19048,"line_start":608,"line_end":608,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read and write permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19053,"byte_end":19143,"line_start":609,"line_end":609,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19624,"byte_end":19630,"line_start":621,"line_end":621,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<MmapRaw>::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the memory mapped file.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the memory mapped file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19263,"byte_end":19315,"line_start":614,"line_end":614,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19320,"byte_end":19323,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ Before dereferencing this pointer, you have to make sure that the file has not been","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19328,"byte_end":19415,"line_start":616,"line_end":616,"column_start":5,"column_end":92}},{"value":"/ truncated since the memory map was created.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19420,"byte_end":19467,"line_start":617,"line_end":617,"column_start":5,"column_end":52}},{"value":"/ Avoiding this will not introduce memory safety issues in Rust terms,","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19472,"byte_end":19544,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/ but will cause SIGBUS (or equivalent) signal.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19549,"byte_end":19598,"line_start":619,"line_end":619,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19603,"byte_end":19612,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20062,"byte_end":20072,"line_start":632,"line_end":632,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<MmapRaw>::as_mut_ptr","value":"pub fn as_mut_ptr(&Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the memory mapped file.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the memory mapped file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19689,"byte_end":19753,"line_start":625,"line_end":625,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19758,"byte_end":19761,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Before dereferencing this pointer, you have to make sure that the file has not been","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19766,"byte_end":19853,"line_start":627,"line_end":627,"column_start":5,"column_end":92}},{"value":"/ truncated since the memory map was created.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19858,"byte_end":19905,"line_start":628,"line_end":628,"column_start":5,"column_end":52}},{"value":"/ Avoiding this will not introduce memory safety issues in Rust terms,","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19910,"byte_end":19982,"line_start":629,"line_end":629,"column_start":5,"column_end":77}},{"value":"/ but will cause SIGBUS (or equivalent) signal.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":19987,"byte_end":20036,"line_start":630,"line_end":630,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20041,"byte_end":20050,"line_start":631,"line_end":631,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20321,"byte_end":20324,"line_start":640,"line_end":640,"column_start":12,"column_end":15},"name":"len","qualname":"<MmapRaw>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length in bytes of the memory map.","sig":null,"attributes":[{"value":"/ Returns the length in bytes of the memory map.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20134,"byte_end":20184,"line_start":636,"line_end":636,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20189,"byte_end":20192,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Note that truncating the file can cause the length to change (and render this value unusable).","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20197,"byte_end":20295,"line_start":638,"line_end":638,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20300,"byte_end":20309,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22257,"byte_end":22264,"line_start":681,"line_end":681,"column_start":12,"column_end":19},"name":"MmapMut","qualname":"::MmapMut","value":"MmapMut {  }","parent":null,"children":[{"krate":0,"index":143}],"decl_id":null,"docs":" A handle to a mutable memory mapped buffer.","sig":null,"attributes":[{"value":"/ A handle to a mutable memory mapped buffer.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20616,"byte_end":20663,"line_start":654,"line_end":654,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20664,"byte_end":20667,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ A file-backed `MmapMut` buffer may be used to read from or write to a file. An anonymous","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20668,"byte_end":20760,"line_start":656,"line_end":656,"column_start":1,"column_end":93}},{"value":"/ `MmapMut` buffer may be used any place that an in-memory byte buffer is needed. Use","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20761,"byte_end":20848,"line_start":657,"line_end":657,"column_start":1,"column_end":88}},{"value":"/ [`MmapMut::map_mut()`] and [`MmapMut::map_anon()`] to create a mutable memory map of the","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20849,"byte_end":20941,"line_start":658,"line_end":658,"column_start":1,"column_end":93}},{"value":"/ respective types, or [`MmapOptions::map_mut()`] and [`MmapOptions::map_anon()`] if non-default","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20942,"byte_end":21040,"line_start":659,"line_end":659,"column_start":1,"column_end":99}},{"value":"/ options are required.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21041,"byte_end":21066,"line_start":660,"line_end":660,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21067,"byte_end":21070,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ A file backed `MmapMut` is created by `&File` reference, and will remain valid even after the","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21071,"byte_end":21168,"line_start":662,"line_end":662,"column_start":1,"column_end":98}},{"value":"/ `File` is dropped. In other words, the `MmapMut` handle is completely independent of the `File`","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21169,"byte_end":21268,"line_start":663,"line_end":663,"column_start":1,"column_end":100}},{"value":"/ used to create it. For consistency, on some platforms this is achieved by duplicating the","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21269,"byte_end":21362,"line_start":664,"line_end":664,"column_start":1,"column_end":94}},{"value":"/ underlying file handle. The memory will be unmapped when the `MmapMut` handle is dropped.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21363,"byte_end":21456,"line_start":665,"line_end":665,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21457,"byte_end":21460,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ Dereferencing and accessing the bytes of the buffer may result in page faults (e.g. swapping","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21461,"byte_end":21557,"line_start":667,"line_end":667,"column_start":1,"column_end":97}},{"value":"/ the mapped pages into physical memory) though the details of this are platform specific.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21558,"byte_end":21650,"line_start":668,"line_end":668,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21651,"byte_end":21654,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ `Mmap` is [`Sync`](std::marker::Sync) and [`Send`](std::marker::Send).","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21655,"byte_end":21729,"line_start":670,"line_end":670,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21730,"byte_end":21733,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ See [`Mmap`] for the immutable version.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21734,"byte_end":21777,"line_start":672,"line_end":672,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21778,"byte_end":21781,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21782,"byte_end":21795,"line_start":674,"line_end":674,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21796,"byte_end":21799,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ All file-backed memory map constructors are marked `unsafe` because of the potential for","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21800,"byte_end":21892,"line_start":676,"line_end":676,"column_start":1,"column_end":93}},{"value":"/ *Undefined Behavior* (UB) using the map if the underlying file is subsequently modified, in or","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21893,"byte_end":21991,"line_start":677,"line_end":677,"column_start":1,"column_end":99}},{"value":"/ out of process. Applications must consider the risk and take appropriate precautions when using","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":21992,"byte_end":22091,"line_start":678,"line_end":678,"column_start":1,"column_end":100}},{"value":"/ file-backed maps. Solutions such as file permissions, locks or process-private (e.g. unlinked)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22092,"byte_end":22190,"line_start":679,"line_end":679,"column_start":1,"column_end":99}},{"value":"/ files exist but are platform specific and limited.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22191,"byte_end":22245,"line_start":680,"line_end":680,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23525,"byte_end":23532,"line_start":723,"line_end":723,"column_start":19,"column_end":26},"name":"map_mut","qualname":"<MmapMut>::map_mut","value":"pub unsafe fn map_mut<T: MmapAsRawDesc>(T) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a writeable memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a writeable memory map backed by a file.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22311,"byte_end":22363,"line_start":686,"line_end":686,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22368,"byte_end":22371,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `MmapOptions::new().map_mut(file)`.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22376,"byte_end":22445,"line_start":688,"line_end":688,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22450,"byte_end":22453,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22458,"byte_end":22470,"line_start":690,"line_end":690,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22475,"byte_end":22478,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22483,"byte_end":22577,"line_start":692,"line_end":692,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read and write permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22582,"byte_end":22672,"line_start":693,"line_end":693,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22677,"byte_end":22680,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22685,"byte_end":22698,"line_start":695,"line_end":695,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22703,"byte_end":22706,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22711,"byte_end":22718,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap2;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22723,"byte_end":22750,"line_start":698,"line_end":698,"column_start":5,"column_end":32}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22755,"byte_end":22782,"line_start":699,"line_end":699,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22787,"byte_end":22792,"line_start":700,"line_end":700,"column_start":5,"column_end":10}},{"value":"/ use std::fs::OpenOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22797,"byte_end":22826,"line_start":701,"line_end":701,"column_start":5,"column_end":34}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22831,"byte_end":22858,"line_start":702,"line_end":702,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22863,"byte_end":22866,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ use memmap2::MmapMut;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22871,"byte_end":22896,"line_start":704,"line_end":704,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22901,"byte_end":22906,"line_start":705,"line_end":705,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22911,"byte_end":22951,"line_start":706,"line_end":706,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22956,"byte_end":23007,"line_start":707,"line_end":707,"column_start":5,"column_end":56}},{"value":"/ let path: PathBuf = /* path to file */","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23012,"byte_end":23054,"line_start":708,"line_end":708,"column_start":5,"column_end":47}},{"value":"/ #   tempdir.path().join(\"map_mut\");","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23059,"byte_end":23098,"line_start":709,"line_end":709,"column_start":5,"column_end":44}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23103,"byte_end":23136,"line_start":710,"line_end":710,"column_start":5,"column_end":38}},{"value":"/                        .read(true)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23141,"byte_end":23179,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/                        .write(true)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23184,"byte_end":23223,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/                        .create(true)","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23228,"byte_end":23268,"line_start":713,"line_end":713,"column_start":5,"column_end":45}},{"value":"/                        .open(&path)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23273,"byte_end":23314,"line_start":714,"line_end":714,"column_start":5,"column_end":46}},{"value":"/ file.set_len(13)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23319,"byte_end":23341,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23346,"byte_end":23349,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ let mut mmap = unsafe { MmapMut::map_mut(&file)? };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23354,"byte_end":23409,"line_start":717,"line_end":717,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23414,"byte_end":23417,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ mmap.copy_from_slice(b\"Hello, world!\");","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23422,"byte_end":23465,"line_start":719,"line_end":719,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23470,"byte_end":23482,"line_start":720,"line_end":720,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23487,"byte_end":23494,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23499,"byte_end":23506,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23881,"byte_end":23889,"line_start":734,"line_end":734,"column_start":12,"column_end":20},"name":"map_anon","qualname":"<MmapMut>::map_anon","value":"pub fn map_anon(usize) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates an anonymous memory map.","sig":null,"attributes":[{"value":"/ Creates an anonymous memory map.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23633,"byte_end":23669,"line_start":727,"line_end":727,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23674,"byte_end":23677,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `MmapOptions::new().len(length).map_anon()`.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23682,"byte_end":23760,"line_start":729,"line_end":729,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23765,"byte_end":23768,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23773,"byte_end":23785,"line_start":731,"line_end":731,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23790,"byte_end":23793,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23798,"byte_end":23869,"line_start":733,"line_end":733,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25067,"byte_end":25072,"line_start":770,"line_end":770,"column_start":12,"column_end":17},"name":"flush","qualname":"<MmapMut>::flush","value":"pub fn flush(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications to disk.","sig":null,"attributes":[{"value":"/ Flushes outstanding memory map modifications to disk.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":23987,"byte_end":24044,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24049,"byte_end":24052,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ When this method returns with a non-error result, all outstanding changes to a file-backed","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24057,"byte_end":24151,"line_start":740,"line_end":740,"column_start":5,"column_end":99}},{"value":"/ memory map are guaranteed to be durably stored. The file's metadata (including last","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24156,"byte_end":24243,"line_start":741,"line_end":741,"column_start":5,"column_end":92}},{"value":"/ modification timestamp) may not be updated.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24248,"byte_end":24295,"line_start":742,"line_end":742,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24300,"byte_end":24303,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24308,"byte_end":24321,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24326,"byte_end":24329,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24334,"byte_end":24341,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap2;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24346,"byte_end":24373,"line_start":747,"line_end":747,"column_start":5,"column_end":32}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24378,"byte_end":24405,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24410,"byte_end":24415,"line_start":749,"line_end":749,"column_start":5,"column_end":10}},{"value":"/ use std::fs::OpenOptions;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24420,"byte_end":24449,"line_start":750,"line_end":750,"column_start":5,"column_end":34}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24454,"byte_end":24477,"line_start":751,"line_end":751,"column_start":5,"column_end":28}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24482,"byte_end":24509,"line_start":752,"line_end":752,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24514,"byte_end":24517,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ use memmap2::MmapMut;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24522,"byte_end":24547,"line_start":754,"line_end":754,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24552,"byte_end":24555,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24560,"byte_end":24600,"line_start":756,"line_end":756,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24605,"byte_end":24656,"line_start":757,"line_end":757,"column_start":5,"column_end":56}},{"value":"/ let path: PathBuf = /* path to file */","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24661,"byte_end":24703,"line_start":758,"line_end":758,"column_start":5,"column_end":47}},{"value":"/ #   tempdir.path().join(\"flush\");","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24708,"byte_end":24745,"line_start":759,"line_end":759,"column_start":5,"column_end":42}},{"value":"/ let file = OpenOptions::new().read(true).write(true).create(true).open(&path)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24750,"byte_end":24833,"line_start":760,"line_end":760,"column_start":5,"column_end":88}},{"value":"/ file.set_len(128)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24838,"byte_end":24861,"line_start":761,"line_end":761,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24866,"byte_end":24869,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let mut mmap = unsafe { MmapMut::map_mut(&file)? };","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24874,"byte_end":24929,"line_start":763,"line_end":763,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24934,"byte_end":24937,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ (&mut mmap[..]).write_all(b\"Hello, world!\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24942,"byte_end":24991,"line_start":765,"line_end":765,"column_start":5,"column_end":54}},{"value":"/ mmap.flush()?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":24996,"byte_end":25014,"line_start":766,"line_end":766,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25019,"byte_end":25031,"line_start":767,"line_end":767,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25036,"byte_end":25043,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25048,"byte_end":25055,"line_start":769,"line_end":769,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25501,"byte_end":25512,"line_start":780,"line_end":780,"column_start":12,"column_end":23},"name":"flush_async","qualname":"<MmapMut>::flush_async","value":"pub fn flush_async(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications to disk.","sig":null,"attributes":[{"value":"/ Asynchronously flushes outstanding memory map modifications to disk.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25170,"byte_end":25242,"line_start":775,"line_end":775,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25247,"byte_end":25250,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This method initiates flushing modified pages to durable storage, but it will not wait for","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25255,"byte_end":25349,"line_start":777,"line_end":777,"column_start":5,"column_end":99}},{"value":"/ the operation to complete before returning. The file's metadata (including last","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25354,"byte_end":25437,"line_start":778,"line_end":778,"column_start":5,"column_end":88}},{"value":"/ modification timestamp) may not be updated.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25442,"byte_end":25489,"line_start":779,"line_end":779,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26199,"byte_end":26210,"line_start":794,"line_end":794,"column_start":12,"column_end":23},"name":"flush_range","qualname":"<MmapMut>::flush_range","value":"pub fn flush_range(&Self, usize, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications in the range to disk.","sig":null,"attributes":[{"value":"/ Flushes outstanding memory map modifications in the range to disk.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25616,"byte_end":25686,"line_start":785,"line_end":785,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25691,"byte_end":25694,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The offset and length must be in the bounds of the memory map.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25699,"byte_end":25765,"line_start":787,"line_end":787,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25770,"byte_end":25773,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ When this method returns with a non-error result, all outstanding changes to a file-backed","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25778,"byte_end":25872,"line_start":789,"line_end":789,"column_start":5,"column_end":99}},{"value":"/ memory in the range are guaranteed to be durable stored. The file's metadata (including","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25877,"byte_end":25968,"line_start":790,"line_end":790,"column_start":5,"column_end":96}},{"value":"/ last modification timestamp) may not be updated. It is not guaranteed the only the changes","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":25973,"byte_end":26067,"line_start":791,"line_end":791,"column_start":5,"column_end":99}},{"value":"/ in the specified range are flushed; other outstanding changes to the memory map may be","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26072,"byte_end":26162,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ flushed as well.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26167,"byte_end":26187,"line_start":793,"line_end":793,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26902,"byte_end":26919,"line_start":807,"line_end":807,"column_start":12,"column_end":29},"name":"flush_async_range","qualname":"<MmapMut>::flush_async_range","value":"pub fn flush_async_range(&Self, usize, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications in the range to disk.","sig":null,"attributes":[{"value":"/ Asynchronously flushes outstanding memory map modifications in the range to disk.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26310,"byte_end":26395,"line_start":798,"line_end":798,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26400,"byte_end":26403,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The offset and length must be in the bounds of the memory map.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26408,"byte_end":26474,"line_start":800,"line_end":800,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26479,"byte_end":26482,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ This method initiates flushing modified pages to durable storage, but it will not wait for","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26487,"byte_end":26581,"line_start":802,"line_end":802,"column_start":5,"column_end":99}},{"value":"/ the operation to complete before returning. The file's metadata (including last","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26586,"byte_end":26669,"line_start":803,"line_end":803,"column_start":5,"column_end":88}},{"value":"/ modification timestamp) may not be updated. It is not guaranteed that the only changes","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26674,"byte_end":26764,"line_start":804,"line_end":804,"column_start":5,"column_end":95}},{"value":"/ flushed are those in the specified range; other outstanding changes to the memory map may","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26769,"byte_end":26862,"line_start":805,"line_end":805,"column_start":5,"column_end":98}},{"value":"/ be flushed as well.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":26867,"byte_end":26890,"line_start":806,"line_end":806,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27879,"byte_end":27893,"line_start":839,"line_end":839,"column_start":12,"column_end":26},"name":"make_read_only","qualname":"<MmapMut>::make_read_only","value":"pub fn make_read_only(Self) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable version of this memory mapped buffer.","sig":null,"attributes":[{"value":"/ Returns an immutable version of this memory mapped buffer.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27025,"byte_end":27087,"line_start":811,"line_end":811,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27092,"byte_end":27095,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ If the memory map is file-backed, the file must have been opened with read permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27100,"byte_end":27191,"line_start":813,"line_end":813,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27196,"byte_end":27199,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27204,"byte_end":27216,"line_start":815,"line_end":815,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27221,"byte_end":27224,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27229,"byte_end":27323,"line_start":817,"line_end":817,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file has not been opened with read permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27328,"byte_end":27416,"line_start":818,"line_end":818,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27421,"byte_end":27424,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27429,"byte_end":27442,"line_start":820,"line_end":820,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27447,"byte_end":27450,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27455,"byte_end":27462,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap2;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27467,"byte_end":27494,"line_start":823,"line_end":823,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27499,"byte_end":27504,"line_start":824,"line_end":824,"column_start":5,"column_end":10}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27509,"byte_end":27532,"line_start":825,"line_end":825,"column_start":5,"column_end":28}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27537,"byte_end":27564,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27569,"byte_end":27572,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ use memmap2::{Mmap, MmapMut};","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27577,"byte_end":27610,"line_start":828,"line_end":828,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27615,"byte_end":27618,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27623,"byte_end":27663,"line_start":830,"line_end":830,"column_start":5,"column_end":45}},{"value":"/ let mut mmap = MmapMut::map_anon(128)?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27668,"byte_end":27711,"line_start":831,"line_end":831,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27716,"byte_end":27719,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ (&mut mmap[..]).write(b\"Hello, world!\")?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27724,"byte_end":27769,"line_start":833,"line_end":833,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27774,"byte_end":27777,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ let mmap: Mmap = mmap.make_read_only()?;","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27782,"byte_end":27826,"line_start":835,"line_end":835,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27831,"byte_end":27843,"line_start":836,"line_end":836,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27848,"byte_end":27855,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":27860,"byte_end":27867,"line_start":838,"line_end":838,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28417,"byte_end":28426,"line_start":852,"line_end":852,"column_start":12,"column_end":21},"name":"make_exec","qualname":"<MmapMut>::make_exec","value":"pub fn make_exec(Self) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Transition the memory map to be readable and executable.","sig":null,"attributes":[{"value":"/ Transition the memory map to be readable and executable.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28010,"byte_end":28070,"line_start":844,"line_end":844,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28075,"byte_end":28078,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ If the memory map is file-backed, the file must have been opened with execute permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28083,"byte_end":28177,"line_start":846,"line_end":846,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28182,"byte_end":28185,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28190,"byte_end":28202,"line_start":848,"line_end":848,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28207,"byte_end":28210,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28215,"byte_end":28309,"line_start":850,"line_end":850,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file has not been opened with execute permissions.","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28314,"byte_end":28405,"line_start":851,"line_end":851,"column_start":5,"column_end":96}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":43738,"byte_end":43747,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":49074,"byte_end":49083,"line_start":213,"line_end":213,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":49521,"byte_end":49530,"line_start":229,"line_end":229,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":49555,"byte_end":49564,"line_start":230,"line_end":230,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1314,"byte_end":1319,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2779,"byte_end":2790,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15567,"byte_end":15571,"line_start":491,"line_end":491,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18004,"byte_end":18008,"line_start":568,"line_end":568,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18188,"byte_end":18192,"line_start":577,"line_end":577,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18291,"byte_end":18295,"line_start":584,"line_end":584,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18768,"byte_end":18775,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20397,"byte_end":20404,"line_start":645,"line_end":645,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22297,"byte_end":22304,"line_start":685,"line_end":685,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28551,"byte_end":28558,"line_start":858,"line_end":858,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28735,"byte_end":28742,"line_start":867,"line_end":867,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28917,"byte_end":28924,"line_start":874,"line_end":874,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":29024,"byte_end":29031,"line_start":881,"line_end":881,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":29142,"byte_end":29149,"line_start":888,"line_end":888,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":43738,"byte_end":43747,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":49074,"byte_end":49083,"line_start":213,"line_end":213,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":17},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":49521,"byte_end":49530,"line_start":229,"line_end":229,"column_start":22,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":17},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/unix.rs","byte_start":49555,"byte_end":49564,"line_start":230,"line_end":230,"column_start":22,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":17},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":1314,"byte_end":1319,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":6872},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":2779,"byte_end":2790,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":15567,"byte_end":15571,"line_start":491,"line_end":491,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18004,"byte_end":18008,"line_start":568,"line_end":568,"column_start":16,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18188,"byte_end":18192,"line_start":577,"line_end":577,"column_start":22,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18291,"byte_end":18295,"line_start":584,"line_end":584,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":18768,"byte_end":18775,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":20397,"byte_end":20404,"line_start":645,"line_end":645,"column_start":21,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":22297,"byte_end":22304,"line_start":685,"line_end":685,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28551,"byte_end":28558,"line_start":858,"line_end":858,"column_start":16,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28735,"byte_end":28742,"line_start":867,"line_end":867,"column_start":19,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":28917,"byte_end":28924,"line_start":874,"line_end":874,"column_start":22,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":29024,"byte_end":29031,"line_start":881,"line_end":881,"column_start":22,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/home/linzell/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap2-0.3.1/src/lib.rs","byte_start":29142,"byte_end":29149,"line_start":888,"line_end":888,"column_start":21,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":9595}}]}